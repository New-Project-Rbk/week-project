import "./chunk-BWEFWRW2.js";
import "./chunk-WXBJ2SFZ.js";
import {
  TypographyInheritContext,
  TypographyNestedContext
} from "./chunk-KGUUSEY7.js";
import {
  styled_default,
  useSlot,
  useThemeProps
} from "./chunk-F3MRXL5C.js";
import {
  generateUtilityClass,
  generateUtilityClasses
} from "./chunk-FCRB6JXY.js";
import "./chunk-OULVC6LR.js";
import {
  init_esm,
  isMuiElement,
  useForkRef,
  useIsFocusVisible
} from "./chunk-H24NXIAB.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  capitalize,
  composeClasses,
  extendSxProp,
  init_extends,
  init_objectWithoutPropertiesLoose,
  require_prop_types
} from "./chunk-7VQ2IQI5.js";
import "./chunk-GH7Z2EUS.js";
import {
  require_jsx_runtime
} from "./chunk-FEVPAJEA.js";
import {
  require_react
} from "./chunk-X6MODOAL.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@mui/joy/Link/Link.js
init_objectWithoutPropertiesLoose();
init_extends();
var React = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Link/linkClasses.js
function getLinkUtilityClass(slot) {
  return generateUtilityClass("MuiLink", slot);
}
var linkClasses = generateUtilityClasses("MuiLink", ["root", "disabled", "focusVisible", "colorPrimary", "colorNeutral", "colorDanger", "colorSuccess", "colorWarning", "colorContext", "focusVisible", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "underlineNone", "underlineHover", "underlineAlways", "h1", "h2", "h3", "h4", "title-lg", "title-md", "title-sm", "body-lg", "body-md", "body-sm", "body-xs", "startDecorator", "endDecorator"]);
var linkClasses_default = linkClasses;

// node_modules/@mui/joy/Link/Link.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
"use client";
var _excluded = ["color", "textColor", "variant"];
var _excluded2 = ["children", "disabled", "onBlur", "onFocus", "level", "overlay", "underline", "endDecorator", "startDecorator", "component", "slots", "slotProps"];
var useUtilityClasses = (ownerState) => {
  const {
    level,
    color,
    variant,
    underline,
    focusVisible,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", color && `color${capitalize(color)}`, disabled && "disabled", focusVisible && "focusVisible", level, underline && `underline${capitalize(underline)}`, variant && `variant${capitalize(variant)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getLinkUtilityClass, {});
};
var StartDecorator = styled_default("span", {
  name: "JoyLink",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})(({
  ownerState
}) => {
  var _ownerState$sx;
  return _extends({
    display: "inline-flex",
    marginInlineEnd: "clamp(4px, var(--Link-gap, 0.375em), 0.75rem)"
  }, typeof ownerState.startDecorator !== "string" && (ownerState.alignItems === "flex-start" || ((_ownerState$sx = ownerState.sx) == null ? void 0 : _ownerState$sx.alignItems) === "flex-start") && {
    marginTop: "2px"
  });
});
var EndDecorator = styled_default("span", {
  name: "JoyLink",
  slot: "endDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})(({
  ownerState
}) => {
  var _ownerState$sx2;
  return _extends({
    display: "inline-flex",
    marginInlineStart: "clamp(4px, var(--Link-gap, 0.25em), 0.5rem)"
  }, typeof ownerState.startDecorator !== "string" && (ownerState.alignItems === "flex-start" || ((_ownerState$sx2 = ownerState.sx) == null ? void 0 : _ownerState$sx2.alignItems) === "flex-start") && {
    marginTop: "2px"
  });
});
var LinkRoot = styled_default("a", {
  name: "JoyLink",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3, _theme$variants$owner, _theme$variants, _theme$variants2, _theme$variants3;
  return [_extends({
    "--Icon-fontSize": "1.25em",
    "--Icon-color": "currentColor",
    "--CircularProgress-size": "1.25em",
    "--CircularProgress-thickness": "3px"
  }, ownerState.level && ownerState.level !== "inherit" && theme.typography[ownerState.level], ownerState.level === "inherit" && {
    font: "inherit"
  }, ownerState.underline === "none" && {
    textDecoration: "none"
  }, ownerState.underline === "hover" && {
    textDecoration: "none",
    "&:hover": {
      "@media (hover: hover)": {
        textDecorationLine: "underline"
      }
    }
  }, ownerState.underline === "always" && {
    textDecoration: "underline"
  }, ownerState.startDecorator && {
    verticalAlign: "bottom"
  }, {
    textDecorationThickness: "max(0.08em, 1px)",
    textUnderlineOffset: "0.15em",
    display: "inline-flex",
    alignItems: "center",
    WebkitTapHighlightColor: "transparent",
    backgroundColor: "transparent",
    outline: 0,
    border: 0,
    margin: 0,
    borderRadius: theme.vars.radius.xs,
    padding: 0,
    cursor: "pointer",
    textDecorationColor: `var(--variant-outlinedBorder, rgba(${(_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.mainChannel} / var(--Link-underlineOpacity, 0.72)))`
  }, ownerState.variant ? _extends({
    paddingBlock: "min(0.1em, 4px)",
    paddingInline: "0.25em"
  }, !ownerState.nesting && {
    marginInline: "-0.25em"
  }) : {
    color: `var(--variant-plainColor, rgba(${(_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2.mainChannel} / 1))`,
    [`&.${linkClasses_default.disabled}`]: {
      pointerEvents: "none",
      color: `var(--variant-plainDisabledColor, rgba(${(_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3.mainChannel} / 0.6))`
    }
  }, {
    userSelect: ownerState.component === "button" ? "none" : void 0,
    MozAppearance: "none",
    WebkitAppearance: "none",
    "&::-moz-focus-inner": {
      borderStyle: "none"
    }
  }, ownerState.overlay ? {
    position: "initial",
    "&::after": {
      content: '""',
      display: "block",
      position: "absolute",
      top: 0,
      left: 0,
      bottom: 0,
      right: 0,
      borderRadius: `var(--unstable_actionRadius, inherit)`,
      margin: `var(--unstable_actionMargin)`
    },
    [`${theme.focus.selector}`]: {
      "&::after": theme.focus.default
    }
  } : {
    position: "relative",
    [theme.focus.selector]: theme.focus.default
  }), ownerState.variant && _extends({}, (_theme$variants$owner = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants$owner[ownerState.color], {
    "&:hover": {
      "@media (hover: hover)": (_theme$variants = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants[ownerState.color]
    },
    "&:active": (_theme$variants2 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants2[ownerState.color],
    [`&.${linkClasses_default.disabled}`]: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants3[ownerState.color]
  })];
});
var Link = React.forwardRef(function Link2(inProps, ref) {
  const _useThemeProps = useThemeProps({
    props: inProps,
    name: "JoyLink"
  }), {
    color = "primary",
    textColor,
    variant
  } = _useThemeProps, themeProps = _objectWithoutPropertiesLoose(_useThemeProps, _excluded);
  const nesting = React.useContext(TypographyNestedContext);
  const inheriting = React.useContext(TypographyInheritContext);
  const props = extendSxProp(_extends({}, themeProps, {
    color: textColor
  }));
  const {
    children,
    disabled = false,
    onBlur,
    onFocus,
    level: levelProp = "body-md",
    overlay = false,
    underline = "hover",
    endDecorator,
    startDecorator,
    component,
    slots = {},
    slotProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded2);
  const level = nesting || inheriting ? inProps.level || "inherit" : levelProp;
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusVisible, setFocusVisible] = React.useState(false);
  const handleRef = useForkRef(ref, focusVisibleRef);
  const handleBlur = (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event);
    }
  };
  const handleFocus = (event) => {
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  const ownerState = _extends({}, props, {
    color,
    disabled,
    focusVisible,
    underline,
    variant,
    level,
    overlay,
    nesting
  });
  const classes = useUtilityClasses(ownerState);
  const externalForwardedProps = _extends({}, other, {
    component,
    slots,
    slotProps
  });
  const [SlotRoot, rootProps] = useSlot("root", {
    additionalProps: {
      onBlur: handleBlur,
      onFocus: handleFocus
    },
    ref: handleRef,
    className: classes.root,
    elementType: LinkRoot,
    externalForwardedProps,
    ownerState
  });
  const [SlotStartDecorator, startDecoratorProps] = useSlot("startDecorator", {
    className: classes.startDecorator,
    elementType: StartDecorator,
    externalForwardedProps,
    ownerState
  });
  const [SlotEndDecorator, endDecoratorProps] = useSlot("endDecorator", {
    className: classes.endDecorator,
    elementType: EndDecorator,
    externalForwardedProps,
    ownerState
  });
  return (0, import_jsx_runtime.jsx)(TypographyNestedContext.Provider, {
    value: true,
    children: (0, import_jsx_runtime2.jsxs)(SlotRoot, _extends({}, rootProps, {
      children: [startDecorator && (0, import_jsx_runtime.jsx)(SlotStartDecorator, _extends({}, startDecoratorProps, {
        children: startDecorator
      })), isMuiElement(children, ["Skeleton"]) ? React.cloneElement(children, {
        variant: children.props.variant || "inline"
      }) : children, endDecorator && (0, import_jsx_runtime.jsx)(SlotEndDecorator, _extends({}, endDecoratorProps, {
        children: endDecorator
      }))]
    }))
  });
});
true ? Link.propTypes = {
  children: import_prop_types.default.node,
  color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["danger", "neutral", "primary", "success", "warning"]), import_prop_types.default.string]),
  component: import_prop_types.default.elementType,
  disabled: import_prop_types.default.bool,
  endDecorator: import_prop_types.default.node,
  level: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["body1", "body2", "body3", "h1", "h2", "h3", "h4", "h5", "h6", "inherit"]), import_prop_types.default.string]),
  onBlur: import_prop_types.default.func,
  onFocus: import_prop_types.default.func,
  overlay: import_prop_types.default.bool,
  slotProps: import_prop_types.default.shape({
    endDecorator: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
    root: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
    startDecorator: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
  }),
  slots: import_prop_types.default.shape({
    endDecorator: import_prop_types.default.elementType,
    root: import_prop_types.default.elementType,
    startDecorator: import_prop_types.default.elementType
  }),
  startDecorator: import_prop_types.default.node,
  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),
  textColor: import_prop_types.default.any,
  underline: import_prop_types.default.oneOf(["always", "hover", "none"]),
  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types.default.string])
} : void 0;
var Link_default = Link;

// node_modules/@mui/joy/Link/index.js
"use client";
export {
  Link_default as default,
  getLinkUtilityClass,
  linkClasses_default as linkClasses
};
//# sourceMappingURL=@mui_joy_Link.js.map
